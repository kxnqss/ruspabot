import { Box } from "detect-collisions";
import { Vec3 } from "vec3";
import { BoxColission, Vec2 } from "./types";
export declare const getTargetDistance: (origin: Vec3, destination: Vec3) => {
    distance: number;
    hDistance: number;
    yDistance: number;
};
export declare const calculateAngle: (from: Vec2, to: Vec2) => number;
export declare const calculateYaw: (from: Vec3, to: Vec3) => number;
export declare const calculateDestinationByYaw: (origin: Vec3, yaw: number, distance: number) => Vec3;
export declare const calculateDestinationByPitch: (origin: Vec3, pitch: number, distance: number) => Vec3;
export declare const calculateRayCast: (origin: Vec3, pitch: number, yaw: number, distance: number) => Vec3;
export declare const calculayePitch: (origin: Vec3, destination: Vec3) => number;
export declare const degreesToRadians: (degrees: number) => number;
export declare const radiansToDegrees: (radians: number) => number;
export declare const getVox: (Vo: number, Alfa: number, Resistance?: number) => number;
export declare const getVoy: (Vo: number, Alfa: number, Resistance?: number) => number;
export declare const getVo: (Vox: number, Voy: number, G: number) => number;
export declare const applyGravityToVoy: (Vo: number, Voy: number, Gravity: number) => number;
export declare const getBoxes: (boxIn: BoxColission) => {
    boxXZ: Box;
    boxXY: Box;
    boxZY: Box;
};
export declare const calculateImpactToBoundingBox: (from: Vec3, to: Vec3, box: BoxColission) => boolean;
